#!/bin/bash

_add_column(){
    REPORT_SOURCE="${1}"
    SECTION="${2}"
    KEY="${3}"
    VALUE="${4}"
    if [[ "${FILE_NUMBER}" = "0" ]] ; then
        if [[ "${REPORT_SOURCE}" = "ffprobe" ]] ; then
            CSV_HEADER+="${SECTION}.${KEY},"
        elif [[ "${REPORT_SOURCE}" = "astats" ]] ; then
            CSV_HEADER+="${KEY// /_}_${SECTION},"
        elif [[ "${REPORT_SOURCE}" = "local" ]] ; then
            CSV_HEADER+="${KEY},"
        fi
    fi
    if [[ "${REPORT_SOURCE}" = "ffprobe" ]] ; then
        CSV_ROW+="$(_flat_ffprobe_parse "${FFPROBE_REPORT}" "${SECTION}.${KEY}"),"
    elif [[ "${REPORT_SOURCE}" = "astats" ]] ; then
        CSV_ROW+="$(_astats_parse "${FILTER_REPORT}" "${SECTION}" "${KEY}"),"
    elif [[ "${REPORT_SOURCE}" = "local" ]] ; then
        CSV_ROW+="${VALUE},"
    else
        _report -w "Unexpected error in _add_column, REPORT_SOURCE=(${REPORT_SOURCE}), SECTION=(${SECTION}), KEY=(${KEY})"
    fi
}

_check_dependencies(){
    while [ "${*}" != "" ] ; do
        DEPENDENCY="${1}"
        if [ ! $(which "${DEPENDENCY}") ] ; then
            _report -wt "This script requires ${DEPENDENCY} to run but it is not installed"
            DEPS_OK=NO
        fi
        shift
    done
    if [[ "${DEPS_OK}" = "NO" ]]; then
        _report -wt "Unmet dependencies"
        _report -wt "Aborting!"
        exit 1
    else
        return 0
    fi
}

_flat_ffprobe_parse(){
    FFPROBE_DOC="${1}"
    KEY="${2}"
    VALUE="$(grep "^${KEY}=" "${FFPROBE_DOC}" | cut -d "=" -f2- | sed -e 's/^"//' -e 's/"$//')"
    VALUE_LINE_COUNT="$(echo -n "${VALUE}" | grep -c '^')"
    if [[ "${VALUE_LINE_COUNT}" > 1 ]] ; then
        _report -w "The parsed value for '${KEY}' is in ${VALUE_LINE_COUNT} lines, which may be unintended"
    fi
    echo -n "${VALUE}"
}

_astats_parse(){
    ASTATS_DOC="${1}"
    SECTION="${2}"
    KEY="${3}"
    if [[ "${SECTION}" == "Overall" ]] ; then
        VALUE="$(sed '1,/Overall$/d' "${ASTATS_DOC}" | grep "] ${KEY}:" | cut -d : -f2- | sed 's/ //g')"
    else
        VALUE="$(sed -n "s/Overall$/Channel: X/g;/Channel: ${SECTION}/,/Channel/p" "${ASTATS_DOC}" | grep "] ${KEY}:" | cut -d : -f2- | sed 's/ //g')"
    fi
    VALUE_LINE_COUNT="$(echo -n "${VALUE}" | grep -c '^')"
    if [[ "${VALUE_LINE_COUNT}" > 1 ]] ; then
        _report -w "The parsed value for '${KEY}' is in ${VALUE_LINE_COUNT} lines, which may be unintended"
    fi
    echo -n "${VALUE}"
}

_get_iso8601(){
    date +%FT%T
}

_maketemp(){
    mktemp -q -t "$(basename "${0}").XXXXXX"
    if [ "${?}" -ne 0 ]; then
        echo "${0}: Can't create temp file, exiting..."
        exit 1
    fi
}

_report(){
    local RED="$(tput setaf 1)"    # Red      - For Warnings
    local GREEN="$(tput setaf 2)"  # Green    - For Declarations
    local BLUE="$(tput setaf 4)"   # Blue     - For Questions
    local MAGENTA="$(tput setaf 5)" # Magenta - For Verbose Statements
    local NC="$(tput sgr0)"        # No Color
    local COLOR=""
    local STARTMESSAGE=""
    local ECHOOPT=""
    local VERBOSE_CHECK=false
    OPTIND=1
    while getopts "vqdwstn" opt ; do
        case "${opt}" in
            v) VERBOSE_CHECK=true ;
               COLOR="${MAGENTA}" ;
               STARTMESSAGE+="#" ;; # only output the message if DV_VERBOSE=true
            q) COLOR="${BLUE}" ;;                        # question mode, use color blue
            d) COLOR="${GREEN}" ;;                       # declaration mode, use color green
            w) COLOR="${RED}" ;;                         # warning mode, use color red
            s) STARTMESSAGE+=([${SCRIPTNAME}] ) ;;       # prepend scriptname to the message
            t) STARTMESSAGE+=($(_get_iso8601) '- ' ) ;;  # prepend timestamp to the message
            n) ECHOOPT="-n" ;;                           # to avoid line breaks after echo
        esac
    done
    shift "$((OPTIND-1))"
    MESSAGE="${1}"
    if ! "${VERBOSE_CHECK}" ; then
        >&2 echo ${ECHOOPT} "${COLOR}${STARTMESSAGE[@]}${MESSAGE}${NC}"
    fi
}

_ss_to_hhmmss(){
    # if milliseconds are used it will round down to nearest second for instance 60.9, will return 1:00
    INT="${1%.*}"
    [[ -z "$INT" ]] && INT="0"
    DEC="$(echo "${1#*.}" | head -c 3)"
    printf "%02d\:%02d\:%02d.${DEC}\n" $(($INT/3600)) $(($INT%3600/60)) $(($INT%60))
}

_get_metadata(){
    FILENAME="${1}"
    BASENAME=$(basename "${FILENAME}")
    FILTER_REPORT="$(_maketemp)"
    FFPROBE_REPORT="$(_maketemp)"
    ffmpeg -nostdin -i "${FILENAME}" -vn -filter_complex "astats" -f null - 2>&1 |  tr "\r" "\n" > "${FILTER_REPORT}"
    ffprobe -i "${FILENAME}" -show_format -show_streams -of flat > "${FFPROBE_REPORT}"
    BWFMETAEDIT_REPORT=$(bwfmetaedit "$FILENAME" 2>&1 | awk '{printf "%s+",$0} END {print ""}')
}

_make_graph(){
    FILENAME="${1}"
    BASENAME=$(basename "${FILENAME}")
    # image settings
    AUDIO_SAMPLE_RATE=48000
    HEADER_HEIGHT=24
    HEADER_HEIGHT_BIG=$(echo "${HEADER_HEIGHT} * 2" | bc)
    TIMELINE_FONTSIZE=16
    FONT_FILE="/Library/Fonts/Courier New.ttf"
    DRAWGRAPH_SETTINGS="bg=Black"
    BORDER_COLOR="LightGrey"
    HORIZONTAL_MARKINGS_240="drawgrid=thickness=1:color=${BORDER_COLOR}@0.2:height=ih/16,drawgrid=thickness=1:color=${BORDER_COLOR}@0.5:height=ih/4,drawgrid=thickness=1:color=${BORDER_COLOR}@0.8:height=ih/2"
    HORIZONTAL_MARKINGS_120="drawgrid=thickness=1:color=${BORDER_COLOR}@0.2:height=ih/8,drawgrid=thickness=1:color=${BORDER_COLOR}@0.5:height=ih/4,drawgrid=thickness=1:color=${BORDER_COLOR}@0.8:height=ih/2"
    GRAPH_W=6000
    AUDIO_FRAME_SIZE="$(echo "((${DURATION}*${AUDIO_SAMPLE_RATE})/${GRAPH_W})+1" | bc)"
    # adding 0.5 in the above equation to ensure that the result is rounded to the nearest integer, rather than simply rounded down
    AUDIOFORMAT="aresample=${AUDIO_SAMPLE_RATE},aformat=sample_fmts=dbl,asetnsamples=n=${AUDIO_FRAME_SIZE}:p=0"
    VERTICAL_MARKINGS=$(echo "${GRAPH_W} / 150" | bc)

    PAD_W="240"

    unset TIMELINE
    COUNTER=0
    while [ "${COUNTER}" -lt "${VERTICAL_MARKINGS}" ]; do
        ((COUNTER++))
        MARK="$(echo "scale=6; $DURATION * ($COUNTER / $VERTICAL_MARKINGS)" | bc)"
        MARK_X="$(echo "scale=6; $GRAPH_W * ($COUNTER / $VERTICAL_MARKINGS)" | bc)"
        MARK_TIME="$(_ss_to_hhmmss "${MARK}")"
        TIMELINE+=",drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:text='${MARK_TIME}':x=${MARK_X}-text_w:y=(${HEADER_HEIGHT}-${TIMELINE_FONTSIZE})/2"
    done
    ffmpeg -nostdin -y -i "$FILENAME" -filter_complex "${GRAPH_FILTER}" \
        -map "[chart]" -vframes 1 ./"${BASENAME}_audio_report2.png"
}

_check_dependencies bwfmetaedit ffmpeg ffprobe


FILE_NUMBER="0"
CSV_HEADER=""
CSV_ROW=""
while [[ "${@}" != "" ]] ; do
    FILENAME="$1"
    BASENAME=$(basename "${FILENAME}")
    unset CSV_ROW
    shift

    _get_metadata "${FILENAME}"

    _add_column astats  1       "Bit depth"
    _add_column astats  2       "Bit depth"
    _add_column astats  Overall "Bit depth"
    _add_column ffprobe streams stream.0.channels
    _add_column ffprobe streams stream.0.codec_name
    _add_column astats  1       "Crest factor"
    _add_column astats  2       "Crest factor"
    _add_column astats  1       "DC offset"
    _add_column astats  2       "DC offset"
    _add_column astats  Overall "DC offset"
    _add_column ffprobe format  duration
    _add_column astats  1       "Dynamic range"
    _add_column astats  2       "Dynamic range"
    _add_column local   ""      filename "${BASENAME}"
    _add_column astats  1       "Flat factor"
    _add_column astats  2       "Flat factor"
    _add_column astats  Overall "Flat factor"
    _add_column astats  1       "Max difference"
    _add_column astats  2       "Max difference"
    _add_column astats  Overall "Max difference"
    _add_column astats  1       "Max level"
    _add_column astats  2       "Max level"
    _add_column astats  Overall "Max level"
    _add_column astats  1       "Mean difference"
    _add_column astats  2       "Mean difference"
    _add_column astats  Overall "Mean difference"
    _add_column astats  1       "Min difference"
    _add_column astats  2       "Min difference"
    _add_column astats  Overall "Min difference"
    _add_column astats  1       "Min level"
    _add_column astats  2       "Min level"
    _add_column astats  Overall "Min level"
    _add_column astats  1       "Noise floor dB"
    _add_column astats  2       "Noise floor dB"
    _add_column astats  Overall "Noise floor dB"
    _add_column astats  1       "Noise floor count"
    _add_column astats  2       "Noise floor count"
    _add_column astats  Overall "Noise floor count"
    _add_column astats  Overall "Number of samples"
    _add_column astats  1       "Peak count"
    _add_column astats  2       "Peak count"
    _add_column astats  Overall "Peak count"
    _add_column astats  1       "Peak level dB"
    _add_column astats  2       "Peak level dB"
    _add_column astats  Overall "Peak level dB"
    _add_column astats  1       "RMS difference"
    _add_column astats  2       "RMS difference"
    _add_column astats  Overall "RMS difference"
    _add_column astats  1       "RMS level dB"
    _add_column astats  2       "RMS level dB"
    _add_column astats  Overall "RMS level dB"
    _add_column astats  1       "RMS peak dB"
    _add_column astats  2       "RMS peak dB"
    _add_column astats  Overall "RMS peak dB"
    _add_column astats  1       "RMS trough dB"
    _add_column astats  2       "RMS trough dB"
    _add_column astats  Overall "RMS trough dB"
    _add_column ffprobe streams stream.0.sample_rate
    _add_column astats  1       "Zero crossings"
    _add_column astats  2       "Zero crossings"
    _add_column astats  1       "Zero crossings rate"
    _add_column astats  2       "Zero crossings rate"
    _add_column local   ""      bwfmetaedit "${BWFMETAEDIT_REPORT}"

    # variables to keep
    DURATION=$(_flat_ffprobe_parse "${FFPROBE_REPORT}" format.duration)

    # express csv row (with header if on first row)
    if [[ "${FILE_NUMBER}" = "0" ]] ; then
        echo "${CSV_HEADER}" | sed 's/.$//'
    fi
    echo "${CSV_ROW}" | sed 's/.$//'

    GRAPH_FILTER="asplit=4[e][j][k][l];
        `#timeline`
        color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT}${TIMELINE},split=6[top1][top2][top3][top4][top5][top6];
        color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT_BIG},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=36:text='Audio QC Graph\:   Filename\: ${BASENAME},   Duration\: $(_ss_to_hhmmss "${DURATION}"),   Audio Frame Size\: ${AUDIO_FRAME_SIZE}'[Header];
        `#int_loudnorm`color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=24:text='Interstitial (with loudnorm) -1...1. Differences in readings from sample to sample. May indicate dropped samples.'[intAH];
        [e]loudnorm=tp=0,${AUDIOFORMAT},astats=metadata=1:reset=1,
            adrawgraph=${DRAWGRAPH_SETTINGS}:
                m1=lavfi.astats.1.Max_difference:
                min=0:max=1:
                slide=picture:
                s=${GRAPH_W}x120,${HORIZONTAL_MARKINGS_120}[intA1];
        `#min/max`color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=24:text='Min/Max Level -1...1. Blue=channel 1, pink=channel 2.'[minmaxH];
        `#int_unprocessed`color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=24:text='Interstitial (unprocessed) -1...1. Differences in readings from sample to sample. May indicate dropped samples.'[intBH];
        `#dc offset`color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=24:text='DC Offset -0.01...0.01. Offsetting of the mean amplitude displacement from zero, in dB. Shows cumulative average over recording; the offset should equal 0 by the end of the graph.'[dcoffH];
        `#peak/rms left`color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=24:text='Peak Level / RMS Level Left -70...0dB. Yellow=peak level, purple=RMS level'[peakLH];
        `#peak/rms right`color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=24:text='Peak Level / RMS Level Right -70...0dB. Yellow=peak level, purple=RMS level'[peakRH];
        `#crest`color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=24:text='Crest Factor 0...10. Ratio of peak to RMS level (not in dB). Blue=channel 1, pink=channel 2.`#High levels may indicate prior compression`'[crestH];
        [k]${AUDIOFORMAT},astats=metadata=1:reset=1,asplit=6[astats1][astats2][astats3][astats4][astats5][astats6];
            [astats1]adrawgraph=${DRAWGRAPH_SETTINGS}:
                m1=lavfi.astats.1.Max_level:
                m2=lavfi.astats.2.Max_level:
                m3=lavfi.astats.1.Min_level:
                m4=lavfi.astats.2.Min_level:
                fg1=0xFFFF00FF:fg2=0xFFFF0000:fg3=0xFFFF00FF:fg4=0xFFFF0000:
                min=-1:max=1:
                slide=picture:
                s=${GRAPH_W}x240,${HORIZONTAL_MARKINGS_240}[minmax1];
            [astats2]adrawgraph=${DRAWGRAPH_SETTINGS}:m1=lavfi.astats.1.Max_difference:min=0:max=0.1:slide=picture:s=${GRAPH_W}x120,${HORIZONTAL_MARKINGS_120}[intB1];
            [astats3]adrawgraph=${DRAWGRAPH_SETTINGS}:
                m1=lavfi.astats.1.DC_offset:
                m2=lavfi.astats.2.DC_offset:
                min=-0.01:max=0.01:
                slide=picture:s=${GRAPH_W}x240:
                fg1=if(gte(VAL\,0.005)\,0xFF0000FF\,if(lte(VAL\,-0.005)\,0xFF0000FF\,0xFF00FF00)),${HORIZONTAL_MARKINGS_240}[dcoff1];
            [astats4]adrawgraph=${DRAWGRAPH_SETTINGS}:
                m1=lavfi.astats.1.Peak_level:
                fg1=0xFF00FFFF:m2=lavfi.astats.1.RMS_level:fg2=0xFF800080:
                max=0:min=-70:
                slide=picture:
                mode=bar:
                s=${GRAPH_W}x240:slide=picture,${HORIZONTAL_MARKINGS_240}[peakL1];
            [astats5]adrawgraph=${DRAWGRAPH_SETTINGS}:
                m1=lavfi.astats.2.Peak_level:
                fg1=0xFF00FFFF:m2=lavfi.astats.2.RMS_level:fg2=0xFF800080:
                max=0:min=-70:
                slide=picture:
                mode=bar:
                s=${GRAPH_W}x240:
                slide=picture,${HORIZONTAL_MARKINGS_240}[peakR1];
            [astats6]adrawgraph=${DRAWGRAPH_SETTINGS}:
                m1=lavfi.astats.1.Crest_factor:
                m2=lavfi.astats.2.Crest_factor:
                fg1=0xFFFF00FF:fg2=0xFFFF0000:
                max=10:min=0:
                slide=picture:
                mode=line:
                s=${GRAPH_W}x240:
                slide=picture,${HORIZONTAL_MARKINGS_240}[crest1];
        `#phase`color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=24:text='Phase -1 (out of phase)...1 (in phase). Green=+0.9 to +1, reasonable for mono/error for stereo. Yellow=0 to +0.9, error for mono/reasonable for stereo. Orange=0 to -0.5, error for mono/strong possibility of error for stereo if occurring more than briefly. Red=-0.5 to -1, error for mono/strong possibility of error for stereo.'[phaseH];
        [j]${AUDIOFORMAT},aphasemeter=video=0,
            adrawgraph=${DRAWGRAPH_SETTINGS}:
                m1=lavfi.aphasemeter.phase:
                max=1:min=-1:
                slide=picture:
                s=${GRAPH_W}x240:
                fg1=if(gte(VAL\,0.9)\,0xFF00FF00\,if(gte(VAL\,0)\,0xFF00FFFF\,if(gte(VAL\,-0.5)\,0xFF0096FF\,0xFF0000FF))),${HORIZONTAL_MARKINGS_240}[phase1];
        `#null test dc`color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=24:text='Null Test DC Offset. Shows DC offset after one track is inverted and overlaid over the other. Should be flat for mono. Red=-1 to 0, green=0 to +1.'[diffH];
        `#null test min/max`color=c=${BORDER_COLOR}:s=${GRAPH_W}x${HEADER_HEIGHT},drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=24:text='Null Test Min/Max Levels -1...1. Shows min/max levels after one track is inverted and overlaid over the other. Blue=channel 1, pink=channel 2.'[nullminmaxH];
        [l]aeval=val(0)|-val(1),${AUDIOFORMAT},aformat=channel_layouts=mono,astats=metadata=1:reset=1,asplit=2[nulltest1][nulltest2];
            [nulltest1]adrawgraph=${DRAWGRAPH_SETTINGS}:
                m1=lavfi.astats.1.DC_offset:
                min=-0.01:max=0.01:
                slide=picture:
                s=${GRAPH_W}x240:
                fg1=if(lt(VAL\,0)\,0xFF0000FF\,0xFF00FF00),${HORIZONTAL_MARKINGS_240}[diff1];
            [nulltest2]adrawgraph=${DRAWGRAPH_SETTINGS}:
                m1=lavfi.astats.1.Max_level:
                m2=lavfi.astats.2.Max_level:
                m3=lavfi.astats.1.Min_level:
                m4=lavfi.astats.2.Min_level:
                fg1=0xFFFF00FF:fg2=0xFFFF00FF:fg3=0xFFFF0000:fg4=0xFFFF0000:
                min=-1:max=1:
                slide=picture:
                s=${GRAPH_W}x240,${HORIZONTAL_MARKINGS_240}[nullminmax1];
        [Header]
        [top1][minmaxH][minmax1][peakLH][peakL1]
        [top2][peakRH][peakR1][crestH][crest1][phaseH][phase1]
        [top3][nullminmaxH][nullminmax1][diffH][diff1]
        [top4][dcoffH][dcoff1]
        [top5][intAH][intA1][intBH][intB1][top6]vstack=27,drawgrid=thickness=1:color=gray@0.5:width=iw/${VERTICAL_MARKINGS},drawgrid=thickness=1:color=${BORDER_COLOR}@0.2:width=(iw/${VERTICAL_MARKINGS})/10[graph];
        color=c=${BORDER_COLOR}:s=${PAD_W}x${HEADER_HEIGHT_BIG}[HeaderG];
        color=c=${BORDER_COLOR}:s=${PAD_W}x${HEADER_HEIGHT},split=16[top1G][top2G][top3G][top4G][top5G][top6G][minmaxHG][peakLHG][peakRHG][crestHG][phaseHG][nullminmaxHG][diffHG][dcoffHG][intAHG][intBHG];
        `#1-1_240p_grat`color=c=${BORDER_COLOR}:s=${PAD_W}x240,drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:y=h*0.52:x=w*0.7:text='0',drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:y=h*0.77:x=w*0.7:text='-0.5',drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:y=h*0.27:x=w*0.7:text='+0.5',drawgrid=thickness=1:color=black@0.2:height=ih/16,drawgrid=thickness=1:color=black@0.5:height=ih/4,drawgrid=thickness=1:color=black@0.8:height=ih/2,split=6[minmax1G][phase1G][crest1G][nullminmax1G][diff1G][dcoff1G];
        `#1-1_120p_grat`color=c=${BORDER_COLOR}:s=${PAD_W}x120,drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:y=h*0.52:x=w*0.7:text='0',drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:y=h*0.77:x=w*0.7:text='-0.5',drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:y=h*0.27:x=w*0.7:text='+0.5',drawgrid=thickness=1:color=black@0.2:height=ih/8,drawgrid=thickness=1:color=black@0.5:height=ih/4,drawgrid=thickness=1:color=black@0.8:height=ih/2,split=2[intA1G][intB1G];
        `#0-70_240p_grat`color=c=${BORDER_COLOR}:s=${PAD_W}x240,drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:y=h*0.52:x=w*0.7:text='-35',drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:y=h*0.77:x=w*0.7:text='-52.5',drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:y=h*0.27:x=w*0.7:text='-17.5',drawtext=fontfile=${FONT_FILE}:fontcolor=black:fontsize=${TIMELINE_FONTSIZE}:y=h*0.02:x=w*0.7:text='0',drawgrid=thickness=1:color=black@0.2:height=ih/16,drawgrid=thickness=1:color=black@0.5:height=ih/4,drawgrid=thickness=1:color=black@0.8:height=ih/2,split=2[peakL1G][peakR1G];
        [HeaderG]
        [top1G][minmaxHG][minmax1G][peakLHG][peakL1G]
        [top2G][peakRHG][peakR1G][crestHG][crest1G][phaseHG][phase1G]
        [top3G][nullminmaxHG][nullminmax1G][diffHG][diff1G]
        [top4G][dcoffHG][dcoff1G]
        [top5G][intAHG][intA1G][intBHG][intB1G][top6G]vstack=27[grat];
        [grat][graph]hstack=2[chart]"
    _make_graph "${FILENAME}"
    ((FILE_NUMBER++))
done
